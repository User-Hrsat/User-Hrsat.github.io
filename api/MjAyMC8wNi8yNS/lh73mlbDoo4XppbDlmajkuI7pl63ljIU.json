{"title":"函数装饰器与闭包","date":"2020-06-25T03:58:04.000Z","date_formatted":{"ll":"2020年6月25日","L":"2020/06/25","MM-DD":"06-25"},"link":"2020/06/25/函数装饰器与闭包","tags":["学习总结"],"categories":["Section2","流畅的Python"],"updated":"2020-06-25T03:58:04.000Z","content":"<h2 id=\"函数装饰器与闭包\">函数装饰器与闭包<a title=\"#函数装饰器与闭包\" href=\"#函数装饰器与闭包\"></a></h2>\n<h3 id=\"原理\">原理<a title=\"#原理\" href=\"#原理\"></a></h3>\n<h4 id=\"装饰器的定义\">装饰器的定义<a title=\"#装饰器的定义\" href=\"#装饰器的定义\"></a></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    装饰器是可调用的对象，其参数是另一个函数(被装饰的函数)。装饰器</span><br><span class=\"line\">可能处理被装饰的函数，然后把它返回，或者将其替换成另一个函数或可调</span><br><span class=\"line\">用对象。</span><br><span class=\"line\">    函数装饰器用于在源码中“标记”函数，以某种方式增强函数的行为。</span><br><span class=\"line\">    想要自己实现装饰器，就需要了解闭包，也需要知道nonlocal。</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>装饰器只是语法糖。有时会很方便，比如<em><strong>元编程</strong></em></p>\n</blockquote>\n<h4 id=\"装饰器的特性\">装饰器的特性<a title=\"#装饰器的特性\" href=\"#装饰器的特性\"></a></h4>\n<ul>\n<li>能把被装饰的函数替换成其他函数</li>\n<li>装饰器在加载模块时立即执行</li>\n</ul>\n<h3 id=\"实践\">实践<a title=\"#实践\" href=\"#实践\"></a></h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">registry = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">register</span>(<span class=\"params\">func</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;running register(%s)&#x27;</span> %func) <span class=\"comment\"># 打印被装饰的函数</span></span><br><span class=\"line\">    registry.append(func)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> func</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@register    ➊                          </span><span class=\"comment\"># 第一次执行(第一行)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">f1</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;running f1()&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@register    ➋                          </span><span class=\"comment\"># 第二次执行(第二行)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">f2</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;running f2()&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">f3</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;running f3()&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():  ➌</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;running main()&#x27;</span>)             <span class=\"comment\"># 第三行</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;registry -&gt;&#x27;</span>, registry)   ➍  <span class=\"comment\"># 第四行</span></span><br><span class=\"line\">    f1()     ➎                          <span class=\"comment\"># 第五行</span></span><br><span class=\"line\">    f2()     ➏                          <span class=\"comment\"># 第六行</span></span><br><span class=\"line\">    f3()     ➐                          <span class=\"comment\"># 第七行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__==<span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    main()   ➌</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>对应输出如下:</p>\n</blockquote>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">running register(&lt;function f1 at 0x7fc2be212c10&gt;)</span><br><span class=\"line\">running register(&lt;function f2 at 0x7fc2be212ca0&gt;)</span><br><span class=\"line\">running main()</span><br><span class=\"line\">registry -&gt; [&lt;function f1 at 0x7fc2be212c10&gt;, &lt;function f2 at 0x7fc2be212ca0&gt;]</span><br><span class=\"line\">running f1()</span><br><span class=\"line\">running f2()</span><br><span class=\"line\">running f3()</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>玄学MD显示不出来，那就贴张图吧</p>\n</blockquote>\n<p><img src=\"../img/end.png\" alt=\"END\" loading=\"lazy\" class=\"φbp\"></p>\n<p>➊➋:两次使用装饰器依次执行，被装饰函数作为参数被调用</p>\n<p>➌:main()被执行</p>\n<p>➍:装饰器作用的二次证明</p>\n<p>➎➏➐:无装饰器正常执行</p>\n<p><em><strong>后续继续补充</strong></em></p>\n","prev":{"title":"Python小技巧","link":"2020/06/29/Python小技巧"},"next":{"title":"Python的数据模型","link":"2020/06/19/Python数据模型"},"plink":"https://user-hrsat.github.io/2020/06/25/函数装饰器与闭包/","toc":[{"id":"函数装饰器与闭包","title":"函数装饰器与闭包","index":"1","children":[{"id":"原理","title":"原理","index":"1.1"},{"id":"实践","title":"实践","index":"1.2"}]}],"copyright":{"author":"User-Hrsat","link":"<a href=\"https://user-hrsat.github.io/2020/06/25/函数装饰器与闭包/\" title=\"函数装饰器与闭包\">https://user-hrsat.github.io/2020/06/25/函数装饰器与闭包/</a>","license":"自由转载-非商用-禁止演绎-保持署名 (<a href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\">CC BY-NC-ND 4.0</a>)","updated":"2020年6月25日"}}